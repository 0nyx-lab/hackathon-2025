## 🎯 EGH2025における「回避すべき要件」リスト

### 1. プロダクトコンセプト面

* **「ワンサイズ・フィットオール」型の学習プラットフォーム**

  * 理由：スタディサプリB2B撤退に象徴されるように、画一的な教材配信は日本の教育文化（個別性・関係性重視）とミスマッチ。
* **学習者の高モチベーション前提の設計**

  * 理由：テーマの核心は「動機の断絶」をどう超えるかであり、「自己管理できる前提」の仕組みは評価対象外になりやすい。
* **多機能すぎてコア価値がぼやける設計**

  * 理由：予選7分発表では「課題→解法→動くデモ」に集中すべきで、機能てんこ盛りは説明破綻を招く。

### 2. 技術・実装面

* **不安定なデバイス／ハード依存の仕組み**

  * 理由：デモの安定動作が必須評価基準。VR/IoTなどは本番リスクが高く、運営もWebアプリ＋Vercel/Koyeb環境を標準と明示。
* **「AIを使っていること」自体を価値にする機能**

  * 理由：「技術的挑戦」は「なぜその技術か」を説明できることが求められる。AI活用は必然性がなければ逆効果。

### 3. 市場・ユーザー理解面

* **レッドオーシャン領域に踏み込む設計**

  * 例：

    * B2B学習塾向けの標準化コンテンツ配信（失敗事例あり）
    * B2C eラーニング単体市場（停滞傾向）
    * 「社会人が自主的に学ぶ前提」のリスキリングサービス（消極性と制度制約が強い）
* **教育現場の「負」を無視する仕組み**

  * 教員の負担増やICTリテラシー不足を助長する設計は避けるべき。

### 4. チーム・運用面

* **協力性が見えないGitHub運用**

  * 理由：審査員はリポジトリ全体を評価。コミットが一人に集中、READMEが空、PRがない等はマイナス。
* **バックアップやリスク管理を欠いた発表準備**

  * 理由：デモ失敗は即減点。動画やモックを準備していない体制は致命的。

---

## ✅ 総合指針

* **「誰のどの“負”を、どう解消するか」に直結しない要件は採用しない。**
* **「大きく見せる」ための機能追加より、「確実に動く一点突破」を優先する。**
* **市場の失敗事例やインフラ制約を無視した設計は必ず評価を落とす。**

---

次のステップとしては、この回避リストをベースに「我々が積極的に選ぶべき要件（ブルーオーシャン寄り・4つの断絶解消型）」を逆に抽出すると、戦略がさらに明確になります。

＝＝
了解。非エンジニアでも“どこをどう見てNG判定すればよいか”まで落とし込んだ、実務用の\*\*アンチ要件（Do Not）\*\*をさらに深掘りします。
下の順番で読むと、企画→設計→実装→デモまで一気通貫で「避けるべき」を検出できます。

---

# 0) まず結論（超要約：ここだけ見てOK）

* **NG-1**：万人向け・全部入り（≒差別化ゼロ）
* **NG-2**：ユーザーの「やる気」に丸投げ（入力や判断を毎回求める）
* **NG-3**：初回5タップで結果が見えない（30秒で達成感が出ない）
* **NG-4**：専用ハード必須／大人数同時接続前提（デモが死ぬ）
* **NG-5**：AIを使うこと自体が目的（課題に直結しないAI機能）
* **NG-6**：教師を“代替”する前提（支援ではなく置換）
* **NG-7**：データ過収集＆規約なし（個人情報まわりが危険）
* **NG-8**：GitHubが“最終日ドン”＆README空（チーム性・再現性が見えない）

---

# 1) 企画フェーズでの**即却下チェック**（5分で判定）

### A. コンセプトの“刺さり”検査

* **匂い**：「誰でも使える学習プラットフォーム」「教材まとめ」「コミュニティ付き」
* **なぜNG**：既存大手と正面衝突／尖りゼロ→ハッカソンの時間では勝てない。
* **OK代替**：「誰（1人称まで具体）」「どの場面」「どの“負”」を**一点突破**。

  * 例：「働きながら英語再学習する20代営業職の“始める気力が毎日枯れる”を、朝1分の“自動マイクロ課題”で突破」

### B. “やる気丸投げ”検査

* **匂い**：「学習計画を1カ月分入力」「今日やることは自分で決めて」
* **なぜNG**：テーマど真ん中の「動機の断絶」を無視。
* **OK代替**：**AIが今やる1ステップ**を自動提示（1分・5分・10分の3プリセット）。

### C. スコープ過多検査

* **匂い**：SNS・ポイント・教材配信・質問箱・タイムライン…（ボタンが10個）
* **なぜNG**：7分発表で価値が伝わらない。
* **OK代替**：「30秒で成果が見える**1本のデモ動線**」以外は将来展望へ退避。

---

# 2) 設計フェーズの**アンチ要件 → 設計置換パターン**

| アンチ要件（Do Not）  | 置換パターン（Do This）       | “非エンジニア向け”の見分け方    |
| -------------- | --------------------- | ------------------ |
| VR/AR/専用デバイス必須 | **Webのみ**で完結（スマホ/PC）  | 触るのに機材が要る？→NG      |
| 大人数同時接続・同期     | 個別体験＋サーバは軽量API        | “同時に○○人”が要件にある？→NG |
| 初回登録で10項目入力    | **ワンクリック体験**＋後でプロフィール | 最初に長いフォーム？→NG      |
| フリーテキストだらけ     | **選択肢＋ワンタップ**中心       | 入力欄だらけ？→NG         |
| 成果が数字で出ない      | **メーター/バッジ/グラフ**即時表示  | 行動後に何も変わらない？→NG    |
| 教師を置き換えるAI     | **教師/コーチ支援**の明示       | “先生不要”に見える表現？→NG   |
| なんでもログ収集       | **必要最小限＋匿名化**＋規約      | “全部取る”と言ってない？→NG   |

---

# 3) 実装フェーズの**非機能ガードレール**（そのまま要件に入れる）

* **デプロイ**：フロントは**Vercel**／APIは**Koyeb**（軽くて自動）。
* **可用性**：デモURL＋**90秒バックアップ動画**を用意（オフラインでも説明できる）。
* **体験速度**：最初の**5タップ以内**に“数値かバッジ”が変化。
* **入力摩擦**：自由記述＜選択肢、初回は**1クリック**でサンプル体験。
* **プライバシー**：個人識別子は**擬名化**、**削除ボタン**実装（規約に明記）。
* **AIの使い所**：**1機能だけに集中**（例：弱点検知→次の1問を自動生成）。
* **拡張の余白**：READMEに\*\*“直後/3ヵ月/6ヵ月”\*\*の拡張方針（将来性対策）。

> 迷ったら：「**これは審査員が自分のPCで30秒触って“おっ”と言うか？**」で判断。

---

# 4) GitHub運用の**落とし穴回避テンプレ**

* **コミット**：機能単位で小刻み（`feat: … / fix: … / docs: …`）。
* **PR**：主要機能は**PRを経由**（レビュー痕跡を作る）。
* **README 必須項目**：

  * デモURL / ログイン方法（テスト用アカウント）
  * 30秒デモ手順（画像3枚以内）
  * アーキ図（1枚）
  * 技術的挑戦（なぜ○○技術か／他案比較）
  * 将来KPI（例：継続率、1日1アクション達成人数）
* **“複数人協働”の見せ方**：UI微修正・Docs更新・テスト追加を**別アカで3件以上**PR→Merge。

---

# 5) **デモ直前チェックリスト**（口頭台本つき）

**NGを潰す15項目**（該当あれば即修正）

1. 初回で入力フォームが出る → **サンプル体験先行**に変更
2. 成果が見えない → **メーター/バッジ**を最初の画面に常駐
3. ボタンが多い → **1本の動線**以外は隠す/非表示
4. “AIすごい”説明だけ → **AIが解決する“負”→結果**の順で話す
5. モバイルで崩れる → CSS最小修正、**スマホ優先**で通す
6. 同時接続デモ → **個別体験**に置き換え（観客は見るだけ）
7. VR/カメラ/音声前提 → **動画差し替え**（事前収録）
8. 通信遅延 → **ローカルモック**を用意、切替できる
9. ログイン必須 → **ワンクリック体験**（ゲスト or デモ用トークン）
10. 規約/同意なし → **簡易プライバシー表示**＋擬名モード
11. ダッシュボードが空 → **ダミーデータ**投入（“今日の弱点：○○”）
12. 複数ペルソナ混在 → **1人称**で語る（例：「私は20代営業…」）
13. 学習計画作成から開始 → **今日の1分**から開始
14. README空 → 5ブロックだけ即記載（上記）
15. “先生不要”表現 → \*\*“先生を支援”\*\*に書換え

**90秒口頭台本（例）**

> 「働きながら英語を学び直したい“私”は、**始める気力が毎朝足りない**。
> デモURLを開くと**今日の1分**が出ます。押すと**1問**だけ出て、終わると**弱点メーターが1目盛り**動きます。
> これを**毎朝の通勤で1分**。AIは**ログから弱点の兆候**を検出し、次の1問を自動で最適化。
> 先生には\*\*“つまづき要約”**が届くので、面談は**励ましと作戦会議に集中\*\*できます。
> 7分後には、**VercelのデモURL**で同じ体験を触っていただけます。」

---

# 6) **アンチ要件 × 評価項目の対応表**（落とすと何点失うかの感覚）

| 評価軸     | 何をすると落ちる       | どう守る             |
| ------- | -------------- | ---------------- |
| 実用性     | やる気丸投げ／成果不可視   | 低摩擦ループ＋即時可視化     |
| 創造性     | 既存コピー          | “未解決の断絶”に新角度     |
| ユーザビリティ | 初回5タップ超え       | 1クリック体験＋最短導線     |
| 技術的挑戦   | “AI使いました”説明止まり | **技術選定の理由**と比較   |
| 将来性     | 一発ネタ           | “直後/3M/6M”の拡張線   |
| 完成度     | ハード依存・大人数同期    | Web単体・個別体験で安定    |
| プレゼン    | 画面数多い・長説明      | 1ストーリー・1動線・30秒成果 |

---

# 7) 具体サンプル：**NG→OK**の書き換え例

* **NG**：「学習計画を1カ月入力すると、AIが…」
  **OK**：「開くと“今日の1分”が出ます。押すと1問→弱点メーターが動きます。」

* **NG**：「先生の代わりにAIが教えます」
  **OK**：「AIが**弱点兆候**をまとめ、先生は**励ましと作戦**に集中できます。」

* **NG**：「教材・動画・記事が一覧で…」
  **OK**：「あなたの**今の弱点1つ**に効く**1問**だけ出します。」

---

# 8) 実装ToDo（すぐ動ける最小構成）

* **フロント**：Next.js → **Vercel**（/demo 直リンクをREADME先頭）
* **API**：Node/Express → **Koyeb**（`/next-question` と `/log` の2本だけ）
* **データ**：JSON or SQLite（学習ログ最小限）
* **AI**：弱点推定の**簡易ルール**→“将来はLLM/埋め込みで高度化”を宣言
* **可視化**：弱点メーター（ゲージ/★）＋「連続日数」バッジ
* **セーフティ**：擬名ID、削除ボタン、簡易規約リンク
* **README**：デモURL／30秒手順／技術理由／将来KPI

---
＝＝
承知いたしました。ここまでの議論を踏まえ、「選定すべきでない要件とは。回避すべき要件とは。」に対する最終的な結論をまとめます。

---

### **【結論】選定すべきでない・回避すべき要件の最終まとめ**

ハッカソンで勝利するために回避すべきは、**「漠然とした、リスクの高い、人間不在の要件」**です。選定すべきは、その逆の**「具体的で、実現可能で、人間に寄り添う要件」**に他なりません。

以下に、回避すべき要件を具体的な禁止事項として集約します。

#### **1. プロダクトコンセプト・機能要件**

* **画一的・万人向けプラットフォーム機能は選定しない。**
    * [cite_start]**理由**: 市場の失敗事例（スタディサプリB2B撤退）が証明するように、個々のニーズに応えられません [cite: 215][cite_start]。何より、「誰のどの“負”を解決するか」という**「実用性」**の評価項目で具体性を欠き、致命的に不利になります [cite: 1, 223]。

* **学習者の高い自己管理能力に依存する機能は避ける。**
    * [cite_start]**理由**: テーマの核心である「**動機の断絶**」を解決できず、むしろ悪化させます [cite: 1, 212]。ユーザーに努力を強いる設計は、学びの体験を改善するという目的から逸脱しています。

* **価値が分散する多機能な設計は避ける。**
    * [cite_start]**理由**: 7分という短い発表時間では価値が伝わりません [cite: 153, 213][cite_start]。また、「初回5タップ以内で成功体験を提供する」という**「ユーザビリティ」**の成功基準を満たすことが極めて困難になります [cite: 1, 223]。

* **教育者を「不要」にする機能は選定しない。**
    * [cite_start]**理由**: atama+やClassiの成功は「教師支援」にあります [cite: 215]。教育者を“代替”する設計は、教育現場からの反発を招き、ビジネスモデルとして破綻していると見なされ**「将来性」**の評価を失います。

#### **2. 技術・実装要件**

* **デモの安定性を損なう挑戦的な技術（VR/AR、ハードウェア連携など）は避ける。**
    * [cite_start]**理由**: 決勝では「**完成度**・動作品質」が最重要視されます [cite: 1, 213]。デモが失敗するリスクは、たとえ技術的に高度であっても、総合評価を大きく下げる要因となります。

* **提供された開発環境（Vercel/Koyeb）の強みを活かせない技術構成は選定しない。**
    * [cite_start]**理由**: 運営は「デモURL提出」という最高評価の要件を満たすための高速道路を用意しています [cite: 225, 223]。これを使わない選択は、速度と安定性を犠牲にするだけでなく、「**技術選定の妥当性**」について厳しい説明責任を負うことになります。

* **課題解決に直結しない、表層的なAI機能は避ける。**
    * [cite_start]**理由**: 「なぜそのAI技術が必要なのか」を説明できなければ、「**技術的挑戦**」や「**創造性**」の評価は得られません [cite: 1, 213]。AIの利用が目的化した機能は、企画の質の低さの表れと見なされます。

#### **3. 開発プロセス・チーム運用**

* **運営ルールに反する開発（個人リポジトリ利用など）は絶対に行わない。**
    * [cite_start]**理由**: 明確なルール違反であり、評価の土俵にすら上がれません [cite: 163]。

* **チームの協力体制や継続的な努力が見えないGitHub運用は避ける。**
    * [cite_start]**理由**: コミットログも評価対象の一部です [cite: 4, 170][cite_start]。一人の開発者が最後にまとめてコードをアップロードするような進め方は、「チームでの協力」というハッカソンの目的と、我々が目指す「チーム性演出」戦略の両方に反します [cite: 3, 223]。

以上の要件を回避することが、限られた時間の中で最大の成果を出し、ハッカソンで勝利するための最も合理的かつ戦略的な選択となります。
＝＝

この議論をさらに深化させるため、これらの「点」で示された禁止事項を、**ハッカソン全体の成功戦略と失敗戦略を分ける「線」と「面」の構造**として捉え直し、なぜこれらが致命的なのかを多角的に解説します。

---

### **議論の深化：禁止リストが示す「負ける戦略」の構造**

ご提示のリストは、単なる個別のアドバイス群ではありません。これらは相互に関連し合っており、一つでも踏み込むと連鎖的に破綻へと向かう**「負けの構造」**を示唆しています。

#### 1. 「プラットフォーム思考」という最も危険な罠：市場・テーマ・UXの連鎖的破綻

[cite_start]リストにある「汎用プラットフォーム模倣」「ワンサイズ・フィットオール設計」「複雑すぎる初回導線」は、独立した問題ではなく、**「プラットフォーム思考」という一つの根深い病**から生じる症状です [cite: 215, 223]。

* **"なぜ"の更なる深掘り**:
    * [cite_start]**「動機の断絶」と「認識の断絶」の無視**: 巨大プラットフォームを作ろうとすると、機能の網羅性に目が行き、テーマの核心である「モチベーションの維持（動機の断絶）」や「成果の可視化（認識の断絶）」という、個人の**感情に寄り添う繊細な体験設計**が抜け落ちます [cite: 4, 10][cite_start]。結果、ユーザーは「何から手をつければいいかわからない」と感じ、すぐに離脱します。これはまさに「初回5タップ以内で成功体験」というユーザビリティ要件の真逆を行くものです [cite: 11, 215]。
    * [cite_start]**審査員の視点**: 審査員は短時間で「このチームは課題の本質を理解しているか？」を見抜こうとします [cite: 215]。壮大なプラットフォーム構想は、「ユーザーの具体的な“負”から逃げ、総論的な機能の話に終始している」と見なされ、「実用性」と「創造性」の両方で低い評価を受けるリスクが非常に高いです。

* **最悪のシナリオ**:
    * プレゼンで「我々のプロダクトは、学習管理、教材共有、コミュニティ機能を統合したオールインワン・プラットフォームです」と宣言した瞬間、審査員は内心で「またか…」と思います。デモでは機能一覧を見せるだけで時間が過ぎ、**「で、誰のどんな痛みが、どうやって10秒で快感に変わるの？」**という最も重要な問いに答えられないまま終わります。

* **戦略的意味合い**:
    * [cite_start]**「小さな尖った機能」**に集中することは、単なる時間短縮策ではありません。それは、**「我々は“学びの体験”というミクロな課題に深く向き合った」という姿勢を審査員に示す、最も効果的な戦略**なのです [cite: 1]。

---

#### 2. 「AIオーケストレーター」戦略の自己否定：技術的リスクと開発プロセスの矛盾

[cite_start]「VR/ARハード必須」「大規模ネットワーク前提」といった要件は、我々が取るべき**「非エンジニアAIオーケストレーター」という独自戦略の強みを自ら放棄する行為**に他なりません [cite: 3, 5]。

* **"なぜ"の更なる深掘り**:
    * [cite_start]**強みの無効化**: 我々の強みは、**Vercel**や**Koyeb**といった最新のPaaS（専門家が管理するサーバー環境）と各種AIのAPIを組み合わせ、**アイデアを驚異的なスピードで形にする「オーケストレーション（指揮）能力」**にあります [cite: 5, 18]。VR開発や大規模通信の基盤構築は、このスピード感を殺し、我々が不得意な低レイヤー（基盤寄り）の技術課題に時間を浪費させるだけです。
    * [cite_start]**技術的挑戦の誤解**: 評価項目「技術的挑戦」は、**難易度の高さではなく「課題解決のための技術選定の妥当性」**を評価するものです [cite: 11, 145, 215][cite_start]。AIを使って「個別最適化された学習成果のリアルタイム可視化」といった、**Web技術の範囲内で実現できる高度な挑戦**こそが、我々の戦略に合致しています [cite: 2, 19]。

* **最悪のシナリオ**:
    * 予選最終日までVRの描画やネットワーク同期のバグと格闘し、肝心の「何を学べるのか」というコア機能が未実装のままプレゼンに臨む。結果、「技術に振り回されて、目的を見失っている」と評価されます。

* **戦略的意味合い**:
    * [cite_start]技術選定は、**自分たちの戦略的優位性を最大化する**ために行うべきです。Vercel, Koyeb, Google Integrationsという運営が用意した「高速道路」を最大限に活用し、AIという「エンジン」を載せて駆け抜けるのが必勝パターンです [cite: 18]。

---

#### 3. 教育市場への無理解：倫理・社会的要件が「将来性」を破壊する

[cite_start]「教師を置き換えるAI設計」「データ無制限収集」といった要件は、単なる倫理的な問題だけでなく、**ビジネスモデルとして成立しない（＝将来性がない）**という致命的な欠陥を抱えています [cite: 13, 146]。

* **"なぜ"の更なる深掘り**:
    * [cite_start]**B2B2Cモデルの無視**: atama+やClassiの成功事例が示す通り、日本のEdTech市場（特に学校向け）は、**生徒（C）だけでなく、学校や先生（B）にお金と導入決定権があるB2B2C構造**です [cite: 13]。先生を「不要」にするプロダクトは、最大の顧客である学校から反発され、導入されることは絶対にありません。これは「将来性」の評価項目を自らゼロにする行為です。
    * [cite_start]**信頼という無形資産**: 教育分野は、極めて高いレベルの倫理観と信頼が求められます。プライバシーへの配慮を欠いた設計は、プロダクトの信頼性を根底から覆し、これもまた「将来性」を否定する要因となります [cite: 13]。

* **最悪のシナリオ**:
    * プレゼンで「このAIがあれば、もう先生は必要ありません」と発言し、会場が凍り付く。質疑応答で「導入コストは誰が払うのですか？学校ですか？」と問われ、ビジネスモデルの欠陥を露呈する。

* **戦略的意味合い**:
    * 我々が作るべきは**「教師を“代替”するAI」**ではなく、**「教師を“支援”し、より創造的な業務に解放するAI」**です。このスタンスを明確に打ち出すことで、倫理的リスクを回避しつつ、「将来性」評価を最大化できます。

---

### **結論：チェックリストを知的コンパスへ**

ご提示のチェックリストは、単なる「地雷回避リスト」ではありません。それは、我々のプロダクトが常に**「誰か一人の、小さな、しかし切実な“断絶”を、人間らしい配慮をもって、我々の得意なやり方で解決する」**という正しい方向を向いているかを確認するための**知的コンパス**です。

開発の途中で迷ったら、このリストに立ち返りましょう。そして、自問するのです。
「今、我々が作ろうとしているこの機能は、リストのどれかに抵触していないか？そして、それは4つの断絶のどれかを、本当に解決しているのか？」と。
この問いこそが、我々を勝利へと導く道標となります。
＝＝
