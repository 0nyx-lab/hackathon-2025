# 📑 Slack判明情報・記録報告（EGH2025 9月回）

## 1. GitHub Appsの追加インストール

* リクエストを受け、以下2つのAppが **全リポジトリにインストール** 済み。

  1. **Google Integrations**

     * Google Cloud / Google Workspace と GitHubの連携。
     * BigQuery・Firebase・Sheetsなどへのデプロイやデータ送信が可能。
  2. **Koyeb**

     * サーバーレス型のPaaS。
     * GitHubリポジトリから直接デプロイでき、軽量APIやマイクロサービス公開に適する。

* その後、さらに **Vercel** が全リポジトリに導入。

  * Next.jsなどフロントエンドアプリの自動デプロイに強み。
  * 提出必須の「デモURL」を即座に生成可能。

---

## 2. 権限設定の変更

* 各リポジトリのメンバー権限が **Admin に引き上げ**。
* これにより：

  * リポジトリルール（例：mainブランチ保護、PR必須化）の設定が可能。
  * 外部サービスやCI/CDのインテグレーション設定をチーム側で自由に行える。

---

## 3. リポジトリ追加の柔軟性

* **「チームが必要とする場合、リポジトリを追加できる」** 方針が運営から示された。
* つまり、要求を出すことで環境をカスタマイズ可能。

### 例：要求可能な内容

* **追加リポジトリ**

  * フロントエンド用とバックエンド用を分けたい
  * 実験用サンドボックスを別に持ちたい

* **追加アプリ／インテグレーション**

  * **データ分析基盤**（例：Datadog, Sentry）
  * **テスト自動化**（例：CircleCI, GitHub App for Jest/Playwright）
  * **学習可視化**（例：Grafana Cloud, Supabase）

* **権限・ルール設定**

  * main直push禁止ルール
  * PRテンプレートの設定
  * Issueテンプレートの追加

---

## 4. 運営の意図（解釈）

* 運営は「全チームが **フロント（Vercel）＋バックエンド（Koyeb）＋データ可視化（Google Integrations）** の三位一体構成」を標準的に使える環境を保証した。
* さらに、チームごとに **追加要求を出すことで柔軟に開発環境を拡張できる** ことを明示。

---

## 5. チーム戦略への示唆

* **Vercel**：予選提出用の「デモURL」確保に必須。
* **Koyeb**：学習ログAPIやAI推論APIを即時公開し、完成度を高める。
* **Google Integrations**：学習成果の可視化やデータドリブン分析を強化。
* **追加要求を活用**：

  * 必要ならリポジトリを増やし、役割分担を明確化。
  * デバッグ・可視化ツールを追加して差別化を図る。

---

📌 **まとめ**
Slackで判明したのは、運営が **「標準環境＋追加要求による柔軟拡張」** を可能にしている点。
チームはニーズに応じて要求を出すことで、自分たちのプロダクト開発に最適化されたGitHub環境を得られる。
競合は積極的に要求を出し、開発スピードや表現力を高めている可能性があるため、我々も「どの要求を出すか」を戦略的に検討すべき。

