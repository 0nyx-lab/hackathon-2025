# 🚫 Engineer Guild Hackathon 2025

## 「作らないべきもの」完全版チェックリスト

以下は、チームのアイデア出し・議論で使える **DON’T（やってはいけないこと）リスト** です。
理由には、必ず資料や過去事例の根拠を紐づけています。

---

### 1. 巨人の土俵で戦う「なんでも学習プラットフォーム」

* **DON’T (1): 動画・教材の置き場を作らない**

  * 例：YouTubeやPDFビューアの焼き直し。
  * 理由：新規性ゼロ。スタディサプリも塾向けでは撤退。

* **DON’T (2): 機能全部入りを狙わない**

  * 例：進捗管理＋ノート＋SNS＋教材配信を全部盛り。
  * 理由：開発6日では未完成だらけになり、「完成度」「UX」で大きく減点。

---

### 2. 壮大すぎて完成しない構想

* **DON’T (3): マッチングSNSをゼロから作らない**

  * 例：学習者同士を繋ぐコミュニティプラットフォーム。
  * 理由：ユーザーがいないと価値ゼロ。「で、誰が使うの？」で審査員に突っ込まれる。

* **DON’T (4): 独自AIモデルやアルゴリズムを作らない**

  * 例：オリジナル手書き認識AIを学習させる。
  * 理由：EGHの評価は「技術選定の妥当性」。既存APIをどう組み合わせるかが評価対象。

---

### 3. 学びの「体験」に触れないただのツール

* **DON’T (5): 紙をデジタルに置き換えただけにしない**

  * 例：単語帳をアプリ化、ノートをクラウド保存。
  * 理由：「文化を変える」動きにならず、「断絶」にも効かない。

* **DON’T (6): 学習者の感情を無視しない**

  * 例：勉強時間をただ監視、正誤だけ通知。
  * 理由：モチベ低下を加速＝「動機の断絶」を悪化。

---

### 4. 利用環境を無視した理想論

* **DON’T (7): 高速回線前提の設計をしない**

  * 例：同時VR授業、全員ストリーミング依存。
  * 理由：学校の8割が帯域不足。現実と乖離し「実用性」で減点。

* **DON’T (8): ITリテラシー前提の難しいUIを作らない**

  * 例：複雑なアカウント設定、専門用語だらけ。
  * 理由：対象は赤ちゃん〜シニア。誰でも「初回5タップ以内」で成功体験が必要。

---

### 5. 教育者と対立するモデル

* **DON’T (9): 教師を完全に代替しない**

  * 例：「AI講師が授業全部やる」系。
  * 理由：現場の反発必至。成功例は「支援型」（atama+やClassi）。

---

### 6. 倫理・ガバナンスを軽視するもの

* **DON’T (10): データ無断収集・監視型を作らない**

  * 例：顔認証による出欠管理、外部に学習履歴を送信。
  * 理由：教育データ法整備は遅れ、プライバシー懸念が大きい。

* **DON’T (11): AIに丸投げし「思考力を奪う」設計にしない**

  * 例：問題を解かず、答えだけ提示するアプリ。
  * 理由：PISAでも過度ICT依存は学力低下と相関。

---

## ✅ まとめ（実践用の言い回し）

チーム議論で使うなら、こんなふうに言えば通じます：

* 「それってスタディサプリの焼き直しですよね？既に撤退事例があるので避けた方がいいです」
* 「機能を全部詰め込むと中途半端で終わるので、1本の成功体験に絞りましょう」
* 「学校の8割は回線が弱いので、同時接続前提はリスキーです」
* 「EGHは“体験を変える”のがテーマなので、単なる便利ツールでは弱いです」

---
＝＝

承知いたしました。いただいた内容と、これまでの分析を統合し、ハッカソンで成功するために「何を作らないべきか」という戦略を、**最終決定版**としてさらに深化・詳細化します。

これは単なる禁止リストではなく、**審査員から高評価を得て、限られた時間で勝利するための「戦略的ロードマップ」**です。各項目について、「なぜそれがダメなのか」を資料の根拠と評価基準に紐づけて、誰にでも分かるように解説します。

---

### ✅ 最終版：「EGHで作らないべき」プロダクトの7つの大罪

このリストにある方向性は、ハッカソンのテーマや評価基準から逸脱し、失敗に繋がりやすい「罠」です。チームでアイデアを出す際に、このリストに該当しないか常に確認してください。

---

#### 1. 個別最適化を欠いた「ワンサイズ・フィットオール」型サービス 罪
**前回のおさらい**: 全員に同じ教材を配るだけの画一的なサービスは、スタディサプリの失敗事例からもわかる通り、現代の教育ニーズに合っていません。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]このアプローチは、ハッカソンのテーマ「『学び』の**体験を変える**」の根幹を否定するものです。ただ教材をデジタル化しただけでは、学習体験は変わりません。重要なのは、AIなどを活用した**「超個別最適化」** [cite: 217, 218] によって、一人ひとりの学習者が「自分だけの学びの旅」を歩めるようにすることです。
* **評価への影響**:
    * [cite_start]**創造性**: 既存のeラーニングサービスとの差別化が全くできず、評価が著しく低くなります [cite: 1, 129]。
    * [cite_start]**実用性**: リクルートの「スタディサプリ・パラドックス」が示すように、画一的なコンテンツは現場（塾や学校）の多様なニーズに応えられず、「実際に役立つ」とは見なされません [cite: 210, 213]。

> **具体的なNGパターン**:
> * 全ユーザーに同じ順番で動画や問題を見せるだけのアプリ。
> * 学習者の進捗や理解度を考慮せず、固定のカリキュラムを提供する仕組み。

---

#### 2. 校内インフラに依存する「大規模・同時接続」型プロダクト 罪
**前回のおさらい**: 学校のWi-Fi環境は脆弱であり、それを無視したプロダクトは実用性がありません。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]この種のプロダクトは、「ユーザーの環境」という最も基本的な前提を見落としています。GIGAスクール構想の現実として、**日本の学校の約8割が推奨通信帯域を満たしていない**という事実は、審査員も知っている重要な情報です [cite: 210]。この現実を無視した提案は、「リサーチ不足で机上の空論」と判断されます。
* **評価への影響**:
    * [cite_start]**完成度**: デモ中にネットワークが不安定になれば、プロダクトは正常に動作せず、致命的な減点対象となります [cite: 1, 133]。
    * [cite_start]**将来性**: どんなに素晴らしいアイデアでも、現在のインフラで導入できないのであれば、スケールする見込みがないと見なされます [cite: 1, 132]。

> **具体的なNGパターン**:
> * クラス全員が同時にVR空間にアクセスして共同作業する授業。
> * 高画質の動画ストリーミングをリアルタイムで何十人もが視聴するシステム。

---

#### 3. 学習者を孤独にする「放置型」B2C自習ツール 罪
**前回のおさらい**: 個人向けの自習アプリは、学習者のモチベーションを維持できず、市場としても縮小傾向にあります。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]このアプローチは、学習者が直面する最も根深い課題である**「動機の断絶」** [cite: 1, 201, 207] [cite_start]を悪化させます。ただツールを提供するだけでは、学習者はすぐに孤独を感じ、挫折してしまいます。求められているのは、「**5分で1勝**」のような短い成功体験を積み重ねられる「**低摩擦ループ**」 [cite: 207, 213] を設計し、学習意欲を内側から引き出す仕組みです。
* **評価への影響**:
    * [cite_start]**実用性**: 「ユーザーの負」であるモチベーション維持を解決できていないため、「本当に役立つのか？」という根本的な疑問が残ります [cite: 1, 128]。
    * [cite_start]**ユーザビリティ**: どんなに使いやすくても、ユーザーが使い続ける「動機」がなければ、優れた体験（UX）とは言えません [cite: 1, 130]。

> **具体的なNGパターン**:
> * 紙の問題集や参考書を、そのままPDFビューアにしただけのアプリ。
> * ユーザーが自力でログインし、黙々と一人で勉強を進めることしかできないサービス。

---

#### 4. 人間の伴走を排除する「教師・代替」型AI 罪
**前回のおさらい**: AIは教師の仕事を奪うのではなく、支援するパートナーとして設計すべきです。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]成功事例である`atama+`の核心は、**AIが基礎的な知識定着をサポートし、人間（教師）がより付加価値の高いコーチングや動機付けに集中できる**ようにした点です [cite: 210, 213]。教育において、人との関わりや感情的なサポートは不可欠です。それを完全に排除する設計は、教育の本質を理解していないと見なされます。
* **評価への影響**:
    * [cite_start]**将来性**: 教育現場から「敵」と見なされるプロダクトは、導入が進むはずがなく、ビジネスとしての成長が見込めません [cite: 1, 132]。
    * [cite_start]**実用性**: 人間の教師との連携が考慮されていないシステムは、実際の教育現場では機能しないため、実用性が低いと評価されます [cite: 1, 128]。

> **具体的なNGパターン**:
> * 「もう先生は要りません」「AIがすべて教えます」といったメッセージを打ち出すプロダクト。
> * 生徒とAIの対話だけで完結し、教師や保護者が介入する余地のないクローズドな設計。

---

#### 5. 思考のプロセスを奪う「AI・自動解答」型サービス 罪
**前回のおさらい**: AIが答えをすべて教えてしまうと、学習者の思考力が育ちません。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]学びの目的は、答えを知ることではなく、答えに至るまでの**思考プロセスを身につける**ことです。AIが課題を自動で解決してしまうと、学習者は「知らない自分」から「できる自分」へ変容する最も重要な機会を失います [cite: 207]。これは「学びの体験」を豊かにするのではなく、むしろ貧しくする行為です。
* **評価への影響**:
    * [cite_start]**実用性**: 学習効果が疑わしいため、「本当にユーザーのためになるのか」という点で根本的な欠陥があると判断されます [cite: 1, 128]。
    * [cite_start]**創造性**: 単に生成AIのAPIを呼び出して答えを表示するだけでは、技術的な工夫や独自のアイデアが見えず、創造性が低いと評価されます [cite: 1, 129]。

> **具体的なNGパターン**:
> * 宿題の写真を撮ると、AIが解答と解説をすべて自動生成してくれるアプリ。
> * プログラミングの課題で、エラーが出たらボタン一つでAIが完成コードを提示してしまう機能。

---

#### 6. 評価基準を無視した「自己満足の技術デモ」 罪
**前回のおさらい**: ハッカソンは技術力を披露する場ではなく、評価基準に沿って点を取る競技です。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]このハッカソンには、明確な採点表が存在します [cite: 1, 128-134][cite_start]。どんなに技術的に面白くても、**「誰の、どんな課題を、どう解決するのか」**というストーリーに落とし込めなければ、評価の土俵にすら上がれません。プレゼンの構成も「課題 → 解法 → 動くデモ → 将来展望」という型が推奨されており [cite: 1, 208]、この流れに沿わないプロダクトは評価されにくい構造になっています。
* **評価への影響**:
    * **全項目**: 評価基準を無視しているため、当然ながら総合得点は低くなります。特に「実用性」と「将来性」がゼロ点になる危険性があります。

> **具体的なNGパターン**:
> * 「面白いけど、何に使えるか分からない」最新技術のデモンストレーション。
> * コンセプトやデザインは未来的だが、MVP（実用最小限の製品）が全く動かない構想発表。

---

#### 7. 倫理と法律を軽視した「リスク満載」な設計 罪
**前回のおさらい**: 教育データは非常に繊細であり、プライバシーへの配慮は絶対条件です。

##### 👎 **なぜ、より深くダメなのか？**
[cite_start]GIGAスクール構想の裏側で、**教育データのプライバシーやセキュリティの問題**が大きな課題となっています [cite: 210]。審査員もこの問題の重要性は認識しています。学習者のデータ、特に子供のデータを無頓着に扱うような設計は、技術的な評価以前に、開発者としての倫理観を問われます。
* **評価への影響**:
    * [cite_start]**将来性**: プライバシーリスクの高いサービスは、社会的に受け入れられず、事業として成立する可能性がありません [cite: 1, 132]。
    * [cite_start]**プレゼンテーション**: 質疑応答でデータ利用について問われ、明確に答えられなければ、プロダクト全体の信頼性が失墜します [cite: 1, 134]。

> **具体的なNGパターン**:
> * 生徒の学習態度を監視カメラと顔認識で評価するシステム。
> * 本人の明確な同意なく、学習履歴や成績データを第三者（企業など）に提供する仕組み。
＝＝