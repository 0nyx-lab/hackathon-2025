# 📑 非エンジニア×AI協働で勝つための成功要件まとめ

## 1. 前提条件

* **テーマ**：「テクノロジーで、“学び”の体験を変える」
* **評価基準**：実用性／創造性／ユーザビリティ／技術的挑戦／将来性／完成度／プレゼン
* **競合想定**：AI学習コーチ、ソーシャル学習ハブ、成果ポートフォリオ、AR/VR体験
* **日本のEdTechの教訓**：

  * 成功＝atama+（個別最適化）、Classi（統合）、Z会（教材＋添削）
  * 失敗＝スタディサプリ塾向け（画一性、利益相反）

---

## 2. 成功要件の4本柱

### (1) 課題解決の質を極限まで高める

* ペルソナを具体化（属性・環境まで）
* 「負（ペイン）」を定量＋定性で提示
* **AI必然性**を示す（超個別最適化・即時分析など）

👉 技術力ではなく「何を解決するか」で圧倒する。

---

### (2) AIオーケストレーション能力

* 各AIを役割分担：Claude Code（初稿）、Codex CLI（最適化）、Gemini CLI（テスト）、ChatGPT（統括）
* 短期間でMVPを構築（スピード優位）
* 「偽エンジニア戦略」＝AIに実装を任せ、人は上流工程に集中

👉 非エンジニアの強み＝指揮者（コンダクター）。

---

### (3) 評価項目をハックするプレゼン

* スライド構成＝審査項目順（空欄を作らせない）
* デモURL提出を最優先＋90秒動画バックアップ
* 技術選定をトレードオフ表で説明（速度・精度・実装容易性）

👉 プレゼン＝「評価シートが自然に埋まる」設計。

---

### (4) チーム協働の痕跡を演出

* GitHubコミットログを小分け＆prefixルールで整理
* READMEを充実（デモURL、起動手順、アーキ図、挑戦ポイント、将来KPI）

👉 「信頼できるチーム」と見せること自体が評価対象。

---

## 3. 戦術的まとめ

* **他チーム（エンジニア中心）**＝実装力勝負。
* **自分たち（非エンジニア×AI）**＝

  * スピード（AIで短期間にMVP）
  * 完成度（動くデモ＋UX重視）
  * 演出（協働・評価項目ハック）

👉 勝ち筋は **「低摩擦で成果が見えるMVP」＋「評価基準直結のプレゼン」**。

---
＝＝

### **Engineer Guild Hackathon 2025 総合戦略**

これは、非エンジニアがAIとの協働を最大限に活用し、技術力で勝るチームを上回るための総合的な戦略計画です。

### 1. ハッカソン概要と目的

* [cite_start]**イベント名**: Engineer Guild Hackathon [cite: 6]
* [cite_start]**主催**: 外資就活ドットコム（株式会社ハウテレビジョン） [cite: 6, 13]
* [cite_start]**テーマ**: 「テクノロジーで、『学び』の体験を変える」 [cite: 1, 6, 126]
    * [cite_start]**背景**: リカレント教育やリスキリングが求められる生涯学習の時代において、学習者が抱える「モチベーション維持」「教材や仲間との出会い」「成果の可視化」といった普遍的な課題の解決が求められています [cite: 1, 7, 129]。
* **期間**:
    * [cite_start]予選開発: 9月6日(土)〜9月12日(金) [cite: 6, 107]
    * [cite_start]予選発表: 9月13日(土) [cite: 6, 107]
    * [cite_start]決勝開発: 9月14日(日)〜9月19日(金) [cite: 6, 107]
    * [cite_start]決勝発表: 9月20日(土) [cite: 6, 107]
* [cite_start]**評価基準**: 以下の7項目で評価されます [cite: 1, 8, 144]。
    1.  [cite_start]**実用性**: ユーザーの課題（負）を実際に解決できるか [cite: 1, 8, 145]。
    2.  [cite_start]**創造性**: アイデアやアプローチに独創性があるか [cite: 1, 8, 146]。
    3.  [cite_start]**ユーザビリティ**: 直感的に使えるか [cite: 1, 8, 147]。
    4.  [cite_start]**技術的挑戦**: 技術選定は適切か、新しい挑戦をしているか [cite: 1, 8, 148]。
    5.  [cite_start]**将来性**: 中長期的な成長の構想が描けているか [cite: 1, 8, 149]。
    6.  [cite_start]**完成度**: プロトタイプが安定して動作するか [cite: 1, 8, 150]。
    7.  [cite_start]**プレゼンテーション**: プロダクトの魅力を伝えられているか [cite: 1, 8, 151]。
* **評価の重点**:
    * [cite_start]**予選**: アイデア・技術選定（コンセプト勝負） [cite: 1, 8]
    * [cite_start]**決勝**: 完成度・UX（動作品質と体験重視） [cite: 1, 8]

---

### 2. 基本戦略：「偽エンジニア」戦略

技術力で正面から戦うのではなく、非エンジニアの特性とAIの能力を掛け合わせた独自の戦略で勝利を目指します。

* [cite_start]**AI依存型開発**: 開発作業の大部分をAIに委ね、人間は戦略的意思決定とAIの指揮（オーケストレーション）に集中します [cite: 2, 10][cite_start]。これにより、驚異的な開発スピードと高い完成度を実現します [cite: 2, 218]。
* **チーム性の戦略的演出**:
    * [cite_start]**構成**: 「兄（あなた）」が実装と意思決定を担当します [cite: 3, 10]。
    * [cite_start]**目的**: 妹のアカウントを設定したPCとAIを兄が操作することで、GitHub上に「複数人協働」の証跡（コミット、プルリクエスト等）を意図的に残し、チーム開発として評価されることを狙います [cite: 3, 10]。

---

### 3. プロダクト戦略：「4つの断絶」の解消

テーマの核心である「学びの体験」における根深い課題を解決するプロダクトを構築します。

* [cite_start]**解決すべき課題**: テクノロジーで介入すべき障壁として特定された**「4つの断絶」**の解消を目指します [cite: 1, 7, 20]。
    1.  [cite_start]**動機の断絶**: 始めたいが継続できない [cite: 1, 7, 20]。
    2.  [cite_start]**接続の断絶**: 学びたいが出会えない（教材・仲間） [cite: 1, 7, 20]。
    3.  [cite_start]**認識の断絶**: 学んでも成果が見えにくい [cite: 1, 7, 20]。
    4.  [cite_start]**応用の断絶**: 学んだことを活かせない [cite: 1, 7, 20]。
* **プロダクトコンセプト**:
    * [cite_start]ハッカソンの短期間で最も効果的に価値を示せる**「動機の断絶」**と**「認識の断絶」**の解消に焦点を当てます [cite: 218, 219]。
    * [cite_start]具体的には、**AIによる「超個別最適化」と「学習成果の多角的・即時可視化」を統合したWebアプリケーション**を開発します [cite: 218]。
        * [cite_start]**機能1（動機の断絶解消）**: AIがユーザーに合わせ、ごく短時間で達成可能な学習タスク（マイクロラーニング）を生成し、「5分で1勝」のような短い成功体験を繰り返すことでモチベーションを維持させます [cite: 21, 219]。
        * [cite_start]**機能2（認識の断絶解消）**: 学習ログや成果物をAIが分析し、スキルマップや成長ダッシュボードとしてリアルタイムに可視化します [cite: 21, 219]。

---

### 4. 実行計画：開発から発表までの具体的なアクション

#### A. 開発・運用計画

* **AIツールの役割分担**:
    * [cite_start]**Claude Code**: 初稿コード生成 [cite: 2, 11]
    * [cite_start]**Codex CLI**: コードの改善・最適化（リファクタリング） [cite: 2, 11]
    * [cite_start]**Gemini CLI**: テストや代替案の提案 [cite: 2, 11]
    * [cite_start]**ChatGPT**: 全体の統括・進行管理 [cite: 2, 11]
* **GitHub運用**:
    * [cite_start]**リポジトリ**: 運営から配布された公式Privateリポジトリを唯一の拠点とします [cite: 4, 173, 223]。
    * [cite_start]**コミット**: 機能単位で小さく分け、「`type: 要約（なぜ/何を/どう）`」というルールでメッセージを統一します [cite: 4, 8, 221]。
    * [cite_start]**READMEの強化**: デモURL、起動手順、テスト用アカウント、アーキテクチャ図、技術的挑戦3点、将来のKPIなどを網羅的に記載し、プロジェクトの顔として作り込みます [cite: 4, 8, 181, 221]。
    * [cite_start]**協働の証跡**: 妹アカウントで最低3件以上のプルリクエスト（README修正、UI微修正など）を作成し、複数人開発の体裁を整えます [cite: 3, 15]。
* **インフラ活用**:
    * 運営から提供された開発環境を最大限に活用します。
    * [cite_start]**Vercel**: フロントエンドの自動デプロイに利用し、提出必須の「デモURL」を即座に生成します [cite: 225]。
    * [cite_start]**Koyeb**: バックエンドAPIの公開に利用し、プロダクトの完成度を高めます [cite: 225]。
    * [cite_start]**Google Integrations**: 学習成果の可視化やデータ分析基盤として活用します [cite: 225]。

#### B. プレゼンテーション計画

* **デモの鉄則（二重化戦略）**:
    * [cite_start]**最優先**: 審査員が直接操作できる**「デモURL」**を提出します [cite: 5, 221]。
    * [cite_start]**保険**: ネットワーク障害などに備え、成功導線を収めた90秒程度の**バックアップ動画**（音声説明付き）を必ず用意します [cite: 5, 221]。
* **スライド設計の型（7分）**:
    1.  [cite_start]**タイトル (0:30)**: 誰のどの負をどう変えるか [cite: 5, 9, 221]。
    2.  [cite_start]**課題の提示 (1:00)**: ペルソナと「負」の解像度を示す [cite: 5, 9, 221]。
    3.  [cite_start]**解決策 (1:00)**: プロダクトのコンセプトと差別化要素 [cite: 5, 9, 221]。
    4.  [cite_start]**デモンストレーション (2:00)**: 「30秒で成果が見える1ルート」に絞って実演 [cite: 5, 9, 221]。
    5.  [cite_start]**技術的挑戦 (1:00)**: 技術選定の妥当性と挑戦3点を説明 [cite: 5, 9, 221]。
    6.  [cite_start]**将来性 (1:00)**: 中長期のロードマップとKPI目標を提示 [cite: 5, 9, 221]。
    7.  [cite_start]**まとめ (0:30)**: 各評価項目に対応する主張を繰り返す [cite: 5, 9, 221]。
* **リスク管理**:
    * [cite_start]練習は**6分30秒で終える**ことを目標とし、本番での時間超過を防ぎます [cite: 15, 222]。
    * [cite_start]API障害時に備え、固定のサンプルデータを返す仕組み（モック）を用意しておきます [cite: 16]。

#### C. 情報発信

* [cite_start]**SNS活用**: 予選前にハッシュタグ「`#EGH`」をつけて開発中のスクリーンショットなどをX（旧Twitter）で発信し、運営や審査員にアピールします [cite: 5, 16, 217, 221]。

以上の戦略を忠実に実行することで、非エンジニアという立場を独自の強みに変え、ハッカソンでの成功を掴むことを目指します。